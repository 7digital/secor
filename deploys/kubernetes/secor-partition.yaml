---
apiVersion: v1
kind: ConfigMap
metadata:
  name: secorns-envvars-partition-log4j
data:
  LOG4J_CONFIGURATION: "config/log4j.docker.properties"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: secorns-envvars-partition-monitor-log4j
data:
  LOG4J_CONFIGURATION: "config/log4j.docker-warn.properties"
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: secor
spec:
  serviceName: secor
  updateStrategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app: secor
    spec:
       containers:
         - image: us.gcr.io/demo/secor
           imagePullPolicy: Always
           name: secor
           envFrom:
             - configMapRef:
                 name: secorns-envvars-partition-common
             - configMapRef:
                 name: secorns-envvars-partition-log4j
           env:
             - name: "GOOGLE_APPLICATION_CREDENTIALS"
               value: "/var/run/secret/cloud.google.com/service-account.json"

           volumeMounts:
           - mountPath: /opt/secor/config
             name: config
           - name: "service-account"
             mountPath: "/var/run/secret/cloud.google.com"
           - name: "local-var"
             mountPath: "/mnt/secor_data/message_logs/partition"


         -  image: us.gcr.io/demo/secor
            imagePullPolicy: Always
            name: monitor
            envFrom:
              - configMapRef:
                  name: secorns-envvars-partition-common
              - configMapRef:
                  name: secorns-envvars-partition-monitor-log4j
            env:
              - name: "SECOR_MAIN_CLASS"
                value: "com.pinterest.secor.main.ProgressMonitorMain"
              - name: "GOOGLE_APPLICATION_CREDENTIALS"
                value: "/var/run/secret/cloud.google.com/service-account.json"

            volumeMounts:
            - mountPath: /opt/secor/config
              name: config
            - name: "service-account"
              mountPath: "/var/run/secret/cloud.google.com"
            - name: "local-var"
              mountPath: "/mnt/secor_data/message_logs/partition"


         - image: prom/statsd-exporter
           imagePullPolicy: IfNotPresent
           name: statsd
           ports:
             - containerPort: 9102
             - containerPort: 9125
               protocol: UDP

       volumes:
       - configMap:
           name: secor-config
         name: config

       - name: "service-account"
         secret:
           secretName: "secor-service-account"

  volumeClaimTemplates:
    - metadata:
        name: local-var
        labels:
          app: secor
        annotations:
          volume.beta.kubernetes.io/storage-class: standard
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: secor-prometheus-metrics
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: "9102"
spec:
  selector:
    app: secor
  ports:
  - protocol: TCP
    name: "http-prometheus"
    port: 9102
    targetPort: 9102
